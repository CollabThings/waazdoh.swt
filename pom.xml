<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<packaging>jar</packaging>
	<version>0.0.2</version>
	<name>waazdoh.swt</name>
	<url>http://maven.apache.org</url>
	<groupId>waazdoh</groupId>
	<artifactId>waazdoh.swt</artifactId>

	<properties>
		<exe.version>0.0.1.0</exe.version>
	</properties>

	<distributionManagement>
		<repository>
			<id>waazdoh-ssh-repository</id>
			<url>sftp://maven.waazdoh.com/opt/maven/repository</url>
		</repository>
	</distributionManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.1.201405082137</version>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec
							</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec
							</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut
							</outputDirectory>
						</configuration>
					</execution>
					<!-- The Executions required by unit tests are omitted. -->
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Failsafe plugin is executed. -->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec
							</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for integration tests after 
						integration tests have been run. -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec
							</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.15</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<!-- Excludes integration tests when unit tests are run. -->
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.15</version>
				<executions>
					<!-- Ensures that both integration-test and verify goals of the Failsafe 
						Maven plugin are executed. -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Sets the VM argument line used when integration tests are run. -->
							<argLine>${failsafeArgLine}</argLine>
							<!-- Skips integration tests if the value of skip.integration.tests 
								property is true -->
							<skipTests>${skip.integration.tests}</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<sourceDirectory>src</sourceDirectory>
					<configLocation>src/main/resources/checkstyle.xml</configLocation>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<findbugsXmlOutput>true</findbugsXmlOutput>
					<findbugsXmlWithMessages>true</findbugsXmlWithMessages>
					<xmlOutput>true</xmlOutput>
				</configuration>
			</plugin>
		</plugins>

		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>2.6</version>
			</extension>
		</extensions>
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>[0.0.1,)</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>waazdoh</groupId>
			<artifactId>waazdoh.client</artifactId>
			<version>[1.1.5,)</version>
		</dependency>

		<dependency>
			<groupId>${swt.groupId}</groupId>
			<artifactId>${swt.artifactId}</artifactId>
			<version>4.3</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jface</groupId>
			<artifactId>org.eclipse.jface</artifactId>
			<version>3.8.0.v20120521-2329</version>
		</dependency>

		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>javafx</artifactId>
			<version>2.2.3</version>
			<scope>system</scope>
			<systemPath>${env.JAVA_HOME}/jre/lib/jfxswt.jar</systemPath>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>mac</id>
			<activation>
				<os>
					<name>mac os x</name>
				</os>
			</activation>
			<properties>
				<swt.groupId>org.eclipse.swt.carbon</swt.groupId>
				<swt.artifactId>macosx</swt.artifactId>
				<app.arch>osx</app.arch>
			</properties>
		</profile>
		<profile>
			<id>windows</id>
			<activation>
				<os>
					<family>windows</family>
					<arch>amd64</arch>
				</os>
			</activation>
			<properties>
				<swt.groupId>org.eclipse.swt</swt.groupId>
				<swt.artifactId>org.eclipse.swt.win32.win32.x86_64</swt.artifactId>
				<app.arch>windows_64</app.arch>
				<doexe>true</doexe>
				<jdk>${env.JAVA_HOME}</jdk>
			</properties>
		</profile>
		<profile>
			<id>windows32</id>
			<activation>
				<os>
					<family>windows</family>
					<arch>x86</arch>
				</os>
			</activation>
			<properties>
				<swt.groupId>org.eclipse.swt</swt.groupId>
				<swt.artifactId>org.eclipse.swt.win32.win32.x86</swt.artifactId>
				<app.arch>windows_32</app.arch>
				<doexe>true</doexe>
				<jdk>${env.JAVA_HOME}</jdk>
			</properties>
		</profile>
		<profile>
			<id>linux64</id>
			<activation>
				<os>
					<family>linux</family>
					<arch>amd64</arch>
				</os>
			</activation>
			<properties>
				<swt.groupId>org.eclipse.swt</swt.groupId>
				<swt.artifactId>org.eclipse.swt.gtk.linux.x86_64</swt.artifactId>
				<app.arch>linux_64</app.arch>
				<jdk>${env.JAVA_HOME}</jdk>
			</properties>
		</profile>
		<profile>
			<id>linux32</id>
			<activation>
				<os>
					<family>linux</family>
					<arch>x86</arch>
				</os>
			</activation>
			<properties>
				<swt.groupId>org.eclipse.swt</swt.groupId>
				<swt.artifactId>org.eclipse.swt.gtk.linux.x86</swt.artifactId>
				<app.arch>linux_32</app.arch>
				<jdk>${env.JAVA_HOME}</jdk>
			</properties>
		</profile>

	</profiles>

	<repositories>
		<repository>
			<id>waazdoh</id>
			<name>waazdoh</name>
			<url>http://maven.waazdoh.com/repository</url>
		</repository>
		<repository>
			<id>swt-repo</id>
			<url>https://swt-repo.googlecode.com/svn/repo/</url>
		</repository>
	</repositories>
</project>
